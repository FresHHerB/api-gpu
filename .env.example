# ============================================
# ORCHESTRATOR (VPS - Easypanel)
# ============================================

# Server Configuration
PORT=3000
NODE_ENV=production

# API Keys
X_API_KEY=sua-chave-publica-para-clientes
GPU_API_KEY=chave-secreta-compartilhada-orchestrator-worker

# Vast.ai Configuration
VAST_API_KEY=xxxxxxxxxxxxxxxxxxxxxxxxx  # Obter em https://vast.ai/console/cli/
VAST_WORKER_IMAGE=seuusuario/api-gpu-worker:latest  # Docker Hub image

# Vast.ai Search Preferences (opcional)
VAST_MIN_VRAM=8  # GB mínimo de VRAM
VAST_MAX_PRICE=1.0  # Preço máximo por hora (USD)
VAST_GPU_MODEL=RTX  # Filtro de GPU (RTX, Tesla, A100, etc)

# Logging
LOG_LEVEL=info  # debug, info, warn, error

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000  # 15 minutos
RATE_LIMIT_MAX_REQUESTS=20

# CORS
CORS_ALLOW_ORIGINS=*  # ou domínios específicos separados por vírgula

# Directories
LOGS_DIR=./logs

# ============================================
# WORKER (Vast.ai GPU) - Injetado via Docker
# ============================================
# Essas variáveis são passadas automaticamente
# pelo Orchestrator ao criar a instância

# SESSION_TOKEN=<gerado-dinamicamente-por-requisicao>
# ALLOWED_IPS=<ip-da-vps-detectado-automaticamente>
# X_API_KEY=<mesma-GPU_API_KEY-do-orchestrator>
# PORT=3334
# NODE_ENV=production
# TEMP_DIR=/app/temp
# OUTPUT_DIR=/app/output
# LOGS_DIR=/app/logs

# ============================================
# DESENVOLVIMENTO LOCAL
# ============================================
# Para testar worker localmente sem Vast.ai:

# SESSION_TOKEN=dev-local-token
# ALLOWED_IPS=127.0.0.1,::1
# AUTO_CLEANUP_TEMP_FILES=true
# TEMP_FILE_MAX_AGE_HOURS=24
